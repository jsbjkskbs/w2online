// Code generated by hertz generator.

package interact

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	interact "work/biz/model/base/interact"
)

// LikeAction .
// @router /like/action/ [POST]
func LikeAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.LikeActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.LikeActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// LikeList .
// @router /like/list/ [GET]
func LikeList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.LikeListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.LikeListResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentPublish .
// @router /comment/publish/ [POST]
func CommentPublish(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.CommentPublishRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.CommentPublishResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentList .
// @router /comment/list/ [GET]
func CommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.CommentListResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentDelete .
// @router /comment/delete/ [DELETE]
func CommentDelete(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.CommentDeleteRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.CommentDeleteResponse)

	c.JSON(consts.StatusOK, resp)
}
