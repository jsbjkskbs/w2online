syntax = "proto3";

package relation;

import "api.proto";
import "base.proto";

option go_package = "base/relation";

message RelationActionRequest {
    string access_token = 1[(api.header)="Access-Token"];
    string refresh_token = 2[(api.header)="Refresh-Token"];
    string to_user_id = 3[(api.go_tag)='json:"to_user_id,required"'];
    int64 action_type = 4[(api.go_tag)='json:"action_type,required"'];
}

message RelationActionResponse {
    Status base = 1;
}

message FollowingListRequest {
    string user_id = 1[(api.query)="user_id"];
    int64 page_num = 2[(api.query)="page_num"];
    int64 page_size = 3[(api.query)="page_size"];
    string access_token = 4[(api.header)="Access-Token"];
    string refresh_token = 5[(api.header)="Refresh-Token"];
}

message FollowingListResponse {
    Status base = 1;
    message FollowingListResponseData {
        repeated UserLite items = 1[(api.go_tag)='json:"items,required"'];;
        int64 total = 2[(api.go_tag)='json:"total,required"'];;
    }
    FollowingListResponseData data = 2;
}

message FollowerListRequest {
    string user_id = 1[(api.query)="user_id"];
    int64 page_num = 2[(api.query)="page_num"];
    int64 page_size = 3[(api.query)="page_size"];
    string access_token = 4[(api.header)="Access-Token"];
    string refresh_token = 5[(api.header)="Refresh-Token"];
}

message FollowerListResponse {
    Status base = 1;
    message FollowerListResponseData {
        repeated UserLite items = 1[(api.go_tag)='json:"items,required"'];
        int64 total = 2[(api.go_tag)='json:"total,required"'];
    }
    FollowerListResponseData data = 2;
}

message FriendListRequest {
    int64 page_num = 2[(api.query)="page_num"];
    int64 page_size = 3[(api.query)="page_size"];
    string access_token = 4[(api.header)="Access-Token"];
    string refresh_token = 5[(api.header)="Refresh-Token"];
}

message FriendListResponse {
    Status base = 1;
    message FriendListResponseData {
        repeated UserLite items = 1[(api.go_tag)='json:"items,required"'];;
        int64 total = 2[(api.go_tag)='json:"total,required"'];
    }
    FriendListResponseData data = 2;
}

service RalationHandler {
    rpc RelationAction(RelationActionRequest) returns(RelationActionResponse) {
        option (api.post) = "/relation/action/";
    }

    rpc FollowingList(FollowingListRequest) returns(FollowingListResponse) {
        option (api.get) = "/following/list/";
    }

    rpc FollowerList(FollowerListRequest) returns(FollowerListResponse) {
        option (api.get) = "/follower/list/";
    }

    rpc FriendList(FriendListRequest) returns(FriendListResponse) {
        option (api.get) = "/friend/list/";
    }
}